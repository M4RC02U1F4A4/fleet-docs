"use strict";(self.webpackChunkfleet_docs=self.webpackChunkfleet_docs||[]).push([[7005],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,g=p["".concat(c,".").concat(m)]||p[m]||f[m]||a;return r?n.createElement(g,l(l({ref:t},d),{},{components:r})):n.createElement(g,l({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1558:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"",sidebar_label:"fleet-manager gitjob"},l=void 0,i={unversionedId:"cli/fleet-controller/fleet-manager_gitjob",id:"version-0.10/cli/fleet-controller/fleet-manager_gitjob",title:"",description:"fleet-manager gitjob",source:"@site/versioned_docs/version-0.10/cli/fleet-controller/fleet-manager_gitjob.md",sourceDirName:"cli/fleet-controller",slug:"/cli/fleet-controller/fleet-manager_gitjob",permalink:"/0.10/cli/fleet-controller/fleet-manager_gitjob",draft:!1,editUrl:"https://github.com/rancher/fleet-docs/edit/main/versioned_docs/version-0.10/cli/fleet-controller/fleet-manager_gitjob.md",tags:[],version:"0.10",lastUpdatedAt:1721292446,formattedLastUpdatedAt:"Jul 18, 2024",frontMatter:{title:"",sidebar_label:"fleet-manager gitjob"}},c={},s=[{value:"fleet-manager gitjob",id:"fleet-manager-gitjob",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:s};function f(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"fleet-manager-gitjob"},"fleet-manager gitjob"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"fleet-manager gitjob [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --debug                         Turn on debug logging\n      --debug-level int               If debugging is enabled, set klog -v=X\n      --gitjob-image string           The gitjob image that will be used in the generated job. (default "rancher/fleet:dev")\n  -h, --help                          help for gitjob\n      --kubeconfig string             Kubeconfig file\n      --leader-elect                  Enable leader election for controller manager. Enabling this will ensure there is only one active controller manager.\n      --listen string                 The port the webhook listens. (default ":8080")\n      --metrics-bind-address string   The address the metric endpoint binds to. (default ":8081")\n      --namespace string              namespace to watch (default "cattle-fleet-system")\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --disable-gitops    disable gitops components\n      --disable-metrics   disable metrics\n      --shard-id string   only manage resources labeled with a specific shard ID\n")),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./fleet-manager"},"fleet-manager"),"\t -")))}f.isMDXComponent=!0}}]);